.version sol 0.58.2

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
LDREF
ENDS
DEPTH
ADDCONST -5
PICK
EQINT -1
THROWIFNOT 71
.loc IdxVcFabric.sol, 16
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
THROWIFNOT 204
.loc IdxVcFabric.sol, 17
ACCEPT
.loc IdxVcFabric.sol, 18
SETGLOB 10
.loc IdxVcFabric.sol, 19
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SETGLOB 11
.loc IdxVcFabric.sol, 20
PUSHINT 16
SETGLOB 12
.loc IdxVcFabric.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro issueVc
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc IdxVcFabric.sol, 23
OVER
PUSHCONT {
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
}
IFELSE
LDU 256
ENDS
.loc IdxVcFabric.sol, 0
CALLREF {
	CALL $issueVc_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xb45b0510
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	issueVc_internal
.type	issueVc_internal, @function
CALL $issueVc_internal_macro$

.macro issueVc_internal_macro
.loc IdxVcFabric.sol, 23
DEPTH
ADDCONST -5
PICK
EQINT -1
THROWIFNOT 71
.loc IdxVcFabric.sol, 27
ACCEPT
.loc IdxVcFabric.sol, 34
GETGLOB 2
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
NEWC
ROLL 3
UNPAIR
XCHG S2
STU 32
STDICT
PUSHINT 1
ROT
PUSHINT 64
DICTUSETB
SWAP
NEWC
STU 256
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
GETGLOB 10
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc IdxVcFabric.sol, 45
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
TUCK
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2803819077499249229031122585109857988247555
STUR 143
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST x345aaf9fc_
ENDC
PUSHINT 0
SENDRAWMSG
.loc IdxVcFabric.sol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc IdxVcFabric.sol, 49
LDREF
LDU 16
ENDS
.loc IdxVcFabric.sol, 0
CALLREF {
	CALL $upgrade_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	upgrade_internal
.type	upgrade_internal, @function
CALL $upgrade_internal_macro$

.macro upgrade_internal_macro
.loc IdxVcFabric.sol, 78
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 11
EQUAL
THROWIFNOT 200
.loc IdxVcFabric.sol, 79
ACCEPT
.loc IdxVcFabric.sol, 52
DUP
GETGLOB 12
GREATER
THROWIFNOT 100
.loc IdxVcFabric.sol, 54
GETGLOB 10
NEWC
STREF
.loc IdxVcFabric.sol, 55
GETGLOB 11
SWAP
STU 256
.loc IdxVcFabric.sol, 56
STU 16
.loc IdxVcFabric.sol, 58
ACCEPT
.loc IdxVcFabric.sol, 59
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
.loc IdxVcFabric.sol, 60
OVER
SETCODE
.loc IdxVcFabric.sol, 61
SWAP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc IdxVcFabric.sol, 62
ENDC
CALLREF {
	CALL $:onCodeUpgrade$
}
.loc IdxVcFabric.sol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc IdxVcFabric.sol, 68
PUSHREF {
}
SETGLOB 10
PUSHINT 0
SETGLOB 11
PUSHINT 0
SETGLOB 12
.loc IdxVcFabric.sol, 69
CTOS
.loc IdxVcFabric.sol, 70
DUP
LDREF
POP S2
SETGLOB 10
.loc IdxVcFabric.sol, 71
DUP
LDU 256
POP S2
SETGLOB 11
.loc IdxVcFabric.sol, 72
LDU 16
DROP
SETGLOB 12
.loc IdxVcFabric.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDREF
LDU 256
LDU 16
ENDS
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREF {
	}
	PUSHINT 0
	DUP
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STREF
STU 256
STU 16
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro codeVer
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ccf41cd6
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 478865691
EQUAL
IFJMPREF {
	CALL $constructor$
}
DUP
PUSHINT 878380304
EQUAL
IFJMPREF {
	CALL $issueVc$
}
DUP
PUSHINT 1291066582
EQUAL
IFJMPREF {
	CALL $codeVer$
}
DUP
PUSHINT 1912291908
EQUAL
IFJMPREF {
	CALL $upgrade$
}

